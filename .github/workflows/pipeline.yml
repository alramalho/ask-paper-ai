name: Github Pipeline
on:
  push:
    branches:
      - main

jobs:

  Deploy-To-Sandbox:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
      DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
      DISCORD_CLIENT_BOT_TOKEN: ${{ secrets.DISCORD_CLIENT_BOT_TOKEN }}
      HIPPOAI_DISCORD_SERVER_ID: "1022781602893414410"
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_SANDBOX }}
      LATEST_COMMIT_ID: ${{ github.sha }}
      ENVIRONMENT: sandbox
      APP_URL: https://sandbox--ask-paper.netlify.app
      ASK_PAPER_BYPASS_AUTH_TOKEN: ${{ secrets.ASK_PAPER_BYPASS_AUTH_TOKEN_SANDBOX }}
      

    steps:

      - name: Checkout source code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Rest of Environment setting
        run: |
          sudo apt update

          sudo apt install jq
          jq --version

      - name: Deploy-Backend
        working-directory: infrastructure
        run: |

          yarn
          yarn build-backend-zip
          yarn bootstrap
          yarn deploy

      - name: Deploy-Frontend
        working-directory: frontend
        id: deploy-frontend
        run: |
          yarn


          export NEXT_PUBLIC_BACKEND_HTTP_APIURL=$(aws cloudformation describe-stacks | jq '.Stacks | .[] | .Outputs | reduce .[]? as $i ({}; .[$i.OutputKey] = $i.OutputValue) | .AskPaperBackendHTTPURLsandbox' | grep -v 'null' | tr -d '"')
          netlify env:set NEXT_PUBLIC_BACKEND_HTTP_APIURL $(echo $NEXT_PUBLIC_BACKEND_HTTP_APIURL)
          netlify env:set DISCORD_CLIENT_ID ${{ secrets.DISCORD_CLIENT_ID }}
          netlify env:set DISCORD_CLIENT_SECRET ${{ secrets.DISCORD_CLIENT_SECRET }}
          netlify env:set DISCORD_CLIENT_BOT_TOKEN ${{ secrets.DISCORD_CLIENT_BOT_TOKEN }}
          netlify env:set HIPPOAI_DISCORD_SERVER_ID $HIPPOAI_DISCORD_SERVER_ID
          netlify env:set NEXTAUTH_URL $APP_URL
          netlify env:set NEXTAUTH_SECRET ${{ secrets.NEXTAUTH_SECRET }}
          netlify deploy --build --auth $NETLIFY_AUTH_TOKEN --alias=sandbox


  E2E-Tests:
    needs: Deploy-To-Sandbox
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      APP_URL: https://sandbox--ask-paper.netlify.app
      ENVIRONMENT: sandbox
      CI: true
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_SANDBOX }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        working-directory: tests/e2e
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

          yarn
      - name: Install Playwright Browsers
        working-directory: tests/e2e
        run: yarn playwright install --with-deps

      - name: Configure AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region eu-central-1
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile hippo
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}  --profile hippo
          aws configure set region eu-central-1  --profile hippo

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Cleanup sandbox
        working-directory: tests
        run: |
          pip install -r requirements.txt
          python scripts/cleanup_sandbox.py

      - name: Run Playwright tests
        working-directory: tests/e2e
        run: |
          yarn start-sandbox
          
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 2
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-test-output
          path: tests/e2e/playwright-test-output/
          retention-days: 2
          

  Deploy-To-Production:
    needs: E2E-Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
      DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
      DISCORD_CLIENT_BOT_TOKEN: ${{ secrets.DISCORD_CLIENT_BOT_TOKEN }}
      HIPPOAI_DISCORD_SERVER_ID: "1022781602893414410"
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET_PRODUCTION }}
      LATEST_COMMIT_ID: ${{ github.sha }}
      ENVIRONMENT: production
      ASK_PAPER_BYPASS_AUTH_TOKEN: ${{ secrets.ASK_PAPER_BYPASS_AUTH_TOKEN_PRODUCTION }}

    steps:

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Environment setting
        run: |
          sudo apt update

          sudo apt install nodejs
          node -v
          sudo apt install npm
          npm -v
          npm install -g aws-cdk
          cdk --version
          sudo apt install jq
          jq --version
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.8
          python3.8 --version

          
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
          

      - name: Configure AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region eu-central-1
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile hippo
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}  --profile hippo
          aws configure set region eu-central-1  --profile hippo

      - name: Deploy-Backend
        run: |

          cd infrastructure
          yarn
          yarn build-backend-zip
          yarn bootstrap
          yarn deploy

      - name: Deploy-Frontend
        run: |
          cd frontend
          yarn

          export NEXT_PUBLIC_BACKEND_HTTP_APIURL=$(aws cloudformation describe-stacks | jq '.Stacks | .[] | .Outputs | reduce .[]? as $i ({}; .[$i.OutputKey] = $i.OutputValue) | .AskPaperBackendHTTPURLproduction' | grep -v 'null' | tr -d '"')
          netlify env:set NEXT_PUBLIC_BACKEND_HTTP_APIURL $(echo $NEXT_PUBLIC_BACKEND_HTTP_APIURL)
          netlify env:set DISCORD_CLIENT_ID ${{ secrets.DISCORD_CLIENT_ID }}
          netlify env:set DISCORD_CLIENT_SECRET ${{ secrets.DISCORD_CLIENT_SECRET }}
          netlify env:set DISCORD_CLIENT_BOT_TOKEN ${{ secrets.DISCORD_CLIENT_BOT_TOKEN }}
          netlify env:set HIPPOAI_DISCORD_SERVER_ID $HIPPOAI_DISCORD_SERVER_ID
          netlify env:set NEXTAUTH_URL https://www.askpaper.ai
          netlify env:set NEXTAUTH_SECRET ${{ secrets.NEXTAUTH_SECRET }}
          netlify deploy --build --auth $NETLIFY_AUTH_TOKEN --prod
    # deploy to production if the branch is main
    if: ${{ github.ref == 'refs/heads/main' }}
