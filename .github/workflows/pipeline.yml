name: Github Pipeline
on:
  push:
    branches:
      - main

jobs:

  Deploy:
    runs-on: ubuntu-latest
    env:
      OPENAI_KEY: ${{ secrets.OPENAI_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    steps:

      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Environment setting
        run: |
          sudo apt update

          sudo apt install nodejs
          node -v
          sudo apt install npm
          npm -v
          npm install -g aws-cdk
          cdk --version
          sudo apt install jq
          jq --version
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.9
          python3.9 --version

          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
          aws -h

          npm i -g vercel
          vercel --version


      - name: Configure AWS
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region eu-central-1
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile hippo
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}  --profile hippo
          aws configure set region eu-central-1  --profile hippo

      - name: Deploy-Backend
        run: |

          cd backend/infrastructure
          yarn
          yarn build-backend-zip
          cdk bootstrap
          
          yarn no-build-fast-deploy

      - name: Deploy-Frontend
        run: |
          vercel link --token ${{ secrets.VERCEL_TOKEN }} --yes
          cd frontend
          yarn
          export NEXT_PUBLIC_BACKEND_APIURL=$(aws cloudformation describe-stacks | jq '.Stacks | .[] | .Outputs | reduce .[]? as $i ({}; .[$i.OutputKey] = $i.OutputValue) | .FastAPILambdaURL' | grep -v 'null' | tr -d '"')
          vercel env add NEXT_PUBLIC_BACKEND_APIURL $NEXT_PUBLIC_BACKEND_APIURL --token ${{ secrets.VERCEL_TOKEN }}
          yarn build
          vercel deploy --token ${{ secrets.VERCEL_TOKEN }}