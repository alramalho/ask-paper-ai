version: '3.8'
services:

  backend:
    container_name: backend
    build:
      context: ./backend
    image: backend:1.0.0
    restart: unless-stopped
    volumes:
      - ./backend/.aws:/root/.aws:ro
      # to work on sandbox, point it to ~/.aws
      # - ~/.aws:/root/.aws:ro
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env
    networks:
      - main

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    image: frontend:1.0.0
    depends_on:
      - backend
    restart: unless-stopped
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
    networks:
      - main

  localstack:
    container_name: "localstack"
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=dynamodb,lambda,logs,s3
      # creates a docker container everytime the lambda is invoked
      - LAMBDA_EXECUTOR=docker
      # necessary to invoke lambda within the docker container
      - DOCKER_HOST=unix:///var/run/docker.sock
      # the main entry point for all API invocations
      - EDGE_PORT=4566
      - AWS_DEFAULT_REGION=eu-central-1
      - AWS_ACCESS_KEY_ID=testUser
      - AWS_SECRET_ACCESS_KEY=testAccessKey
      - DATA_DIR=/var/lib/localstack/data
    ports:
      - "4566:4566"
    volumes:
      - "${PWD}/localstack:/var/lib/localstack"
      # necessary to invoke lambda within the docker container
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - main

networks:
  main:
